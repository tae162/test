+===============
+ init

// create repository
git init

+===============
+ clone

// clone via ssh
ssh-keygen -t rsa -b 4096 -C "tae162@naver.com"
ssh-add ~/.ssh/id_rsa
register ~/.ssh/id_rsa.pub to github
ssh -T git@github.com	// test ssh
git clone git@github.com:tae162/test.git

// clone local git
git clone ../.git 1

+===============
+ checkout

git checkout -b issue33
 = git branch issue33; git checkout issue33

// checkout tag v0.1 creating new branch version_0.1
git checkout -b version_0.1 v0.1

// checkout(move HEAD) to previous commit from current
// HEAD^ = HEAD^1 = HEAD~1
// HEAD^^ = HEAD^2 = HEAD~2
git checkout HEAD~1		// one commit before 
git checkout HEAD~3		// three commits before

+===============
+ reset

// clear file of staged area
git reset file

// set HEAD to commit_id (like checkout)
git reset commit_id

// set HEAD to commit 10th before
git reset HEAD~10

// remove last two commits and set HEAD
git reset --hard HEAD~~

// after "reset --hard", recover log
git reset --hard ORIG_HEAD

+===============
+ rebase

// move the current sperate branches to master before
git rebase master

// integrate two commits into one new using rebase -i with squash
git rebase -i HEAD~~
edit "pick" to "squash"

+===============
+ revert

// create new commit reverting the changes at HEAD
git revert HEAD

+===============
+ config

// make alias
git config --global alias.co checkout
git config --global alias.br 'branch -av'
git config --global alias.ci commit
git config --global alias.st status
git config --global alias.unstage 'reset HEAD --'

git config --global alias.ll 'log --pretty=format:"\%H \%an, \%ar: \%s" --graph --all'
git config --global alias.ls 'log --oneline --decorate=full --graph --all'
git config --global alias.last 'log -1 HEAD -p'

git config --global alias.visual '!gitk'

+===============
+ remote

git remote -v
origin	https://github.com/tae162/test.git (fetch)
origin	https://github.com/tae162/test.git (push)

git remote show origin

git remote add hub https://github.com/tae162/test.git

+===============
+ commit

// replace the last commit with update (files, messages, etc)
git commit -m "add file name" --amend

+===============
+ branch

git branch -av

// create test branch
git branch test

// delete test branch
git branch -d test

// force to delete test branch that's not merged
git branch -D test

// list branches that has merged
git branch --merged
git branch --no-merged

// list branches that has merged with testing branch
git branch --merged testing
git branch --no-merged testing

// create branch at specific commit 
git branch master 793ef97

+===============
+ merge/fetch/pull

// origin master by default if no other repository and branch
git pull (origin master)

// fetch and merge remote origin server's master branch
git pull origin master = git pull (default behavior)

// do fast-forward if possible (default behavior)
// fast-forward only moves a branch pointer, without creating a merge commit
git merge --ff

// create a merge commit even when the merge resolves as a fast-forward
git merge --no-ff

// merge testing branch with the current master branch
// after this, mastr branch is moved to testing branch
git merge testing

+===============
+ cherry-pick

// apply specific commit to HEAD
git cherry-pick 6a8e8d6

+===============
+ tag

// create tag on the current commit
git tag -a v0.2 -m "version v0.2"

// create tag on specific commit
git tag -a v0.1 6f7a097fd -m "version v0.1"

// list tag
git tag

git tag -v v0.1

// search tag
git tag -l "v0.1*"

// delete tag
git tag -d v1.0

+===============
+ diff

// diff working and staged
git diff

// diff staged and committed
git diff --staged
git diff --cached
git diff --cached a.c


// diff two commits
git diff efed623 6a8e8d6

// diff a1.c at two commits
git diff efed623 6a8e8d6 a1.c

+===============
+ log

// show status of commit
git log --stat

// show diff of the recent 2 commits
git log -p -2

// show readible log
git log --oneline
git log --pretty=oneline
git log --pretty=fomat:"%H %an, %ar: %s"
fomat:6ebc2425b4c924a4c695db7d22a8138d9bdff61c tae162, 7 minutes ago: delete a1

git log --pretty=fomat:"%H %an, %ar: %s" --graph

// search log with author
git log --author="tae162"

// search log with keyword
git log -S function_a -p --stat

+===============
+ push

// origin master by default if no other repository and branch
git push (origin master)

// push current branch to remote origin's version_0.1 branch
git push origin version_0.1

// push tag (git push doesn't push tags)
git push origin --tags
git push --tags

// register to gerrit
git push origin HEAD:refs/for/master

+===============
+ stash

git stash list

// store
git stash		// move staged files to stash
git stash -u	// move staged + untracked files to stash
git stash -a	// move staged + untracked + ignored files to stash

// restore (stash@{0} is the latest, stash@{1} is the one before)
git stash pop

// Like pop, but do not remove the state from the stash list
git stash apply

// discard
git stash drop

+===============
+ tools
git mergetool
git gitk

+===============
+ usecase

// hotfix in new branch and merge to master
git checkout -b hotfix
fix code
git commit -m "hotfix"
git checkout master
git merge hotfix
git branch -d hotfix

